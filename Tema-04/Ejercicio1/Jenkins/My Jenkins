pipeline {
    agent any
    stages {
        stage('Get Code') {
            steps {
                // Hace un git Clone del codigo - Nota: La rama pripal por defecto es master, sino especificar.
                git branch: 'devel', url: 'https://github.com/David-Segui/curso-devops.git'
                
                //Llamada a git especificando la rama por defecto
                //checkout([$class: 'GitSCM',
                //    branches: [[name: 'devel']],
                //    userRemoteConfigs: [[url: 'https://github.com/David-Segui/curso-devops.git']]])
                
                //bat "git.exe clone https://github.com/David-Segui/curso-devops.git"
                
            }
        }
        stage('Build') {
            steps {
                bat "echo %WORKSPACE%"
                bat "dir"
            }
        }
        stage('Unit') {
            steps {
                catchError(buildResult: "UNSTABLE", stageResult: "FAILURE") {
                  
                    bat '''
                        set PYTHONPATH=.\\Tema-04\\Ejercicio1
                        set PATH=%PATH%;C:\\Users\\david\\AppData\\Local\\Programs\\Python\\Python311\\Scripts;C:\\Users\\david\\AppData\\Local\\Programs\\Python\\Python311
                        cd .\\Tema-04\\Ejercicio1
                        pytest --junitxml=result-unix.xml test\\unit 
                    '''
                    //NOTA:La salida de pytest lo guardamos en un fuchero xml
                }
            }
        }
        stage('Finish') {
            steps {
                bat 'echo "---FIN---"'
            }
        }
    }
}
